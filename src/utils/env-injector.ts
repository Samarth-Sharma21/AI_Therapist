/**
 * Environment Variable Injector
 * 
 * This script injects environment variables into the global scope at runtime
 * to prevent them from being bundled into the build output.
 */

export const injectEnvironmentVariables = () => {
  // Create ENV object on window if it doesn't exist
  if (typeof window !== 'undefined') {
    (window as any).ENV = (window as any).ENV || {};
    
    // Map VITE_ prefixed environment variables
    const envVars = [
      'VITE_OPENROUTER_API_KEY',
      'VITE_OPENROUTER_MODEL',
      'VITE_SUPABASE_URL',
      'VITE_SUPABASE_ANON_KEY'
    ];
    
    // Use runtime config if available (generated by build script)
    if ((window as any).RUNTIME_CONFIG) {
      envVars.forEach(key => {
        const value = (window as any).RUNTIME_CONFIG[key];
        if (value) {
          (window as any).ENV[key] = value;
        }
      });
    }
    
    // Fallback to import.meta.env for local development
    envVars.forEach(key => {
      if (!(window as any).ENV[key] && typeof import.meta !== 'undefined') {
        (window as any).ENV[key] = import.meta.env?.[key];
      }
    });
  }
};